(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{398:function(n,e,t){"use strict";t.r(e);var r=t(44),a=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"openlayer初始化地图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#openlayer初始化地图"}},[n._v("#")]),n._v(" Openlayer初始化地图")]),n._v(" "),t("h2",{attrs:{id:"_1-初始化地图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-初始化地图"}},[n._v("#")]),n._v(" 1.初始化地图")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import 'ol/ol.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport OSM from \"ol/source/OSM.js\";\n\nexport default class MAP {\n  constructor(dom) {\n    this.map = null;\n    this.dom = dom;\n    this.map = this.init();\n  }\n\n  init() {\n    return new Map({\n      target: this.dom,\n      controls: [],\n      layers: [\n        new TileLayer({\n          id: 'BASEMAP_IMAGE_LAYER',\n          preload: Infinity,\n          source: new OSM(),\n      ],\n      view: new View({\n        center: [0,0],\n        zoom: 10,\n      }),\n    });\n  }\n}\n")])])]),t("h2",{attrs:{id:"_2-添加图层-overlay-feature"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加图层-overlay-feature"}},[n._v("#")]),n._v(" 2.添加图层,overlay,feature,")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import Vue from 'vue';\nimport Overlay from 'ol/Overlay';\nimport Feature from 'ol/Feature.js';\nimport LineString from 'ol/geom/LineString.js';\nimport PointDom from '@/views/patrol-manage/map/Point.vue';\nimport { Stroke, Style } from 'ol/style';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport StartImg from 'xxx/start.png';\nimport EndImg from 'xxx/end.png';\n\nexport default class Polyline {\n  constructor(map) {\n    this.map = map;\n    this.view = this.map.getView();\n    // 添加新的图层用来存放feature\n    this.source = new VectorSource();\n    this.layer = new VectorLayer({\n      id: 'patrol',\n      source: this.source,\n    });\n    this.map.addLayer(this.layer);\n  }\n\n  /**\n   * 添加overlay\n   * @param {Array} pos [0,0]点位坐标\n   * @param {String} type 点位类型,start:起始坐标图标样式,end:结束坐标图标样式\n   */\n  addOverlay(pos, icon) {\n    const ComponentCtor = Vue.extend(PointDom);\n    const instance = new ComponentCtor({\n      propsData: { icon },\n    });\n    instance.$mount();\n    const overlay = new Overlay({\n      type: 'patrol',\n      position: [pos.longitude, pos.latitude],\n      positioning: 'center-center',\n      element: instance.$el,\n      // stopEvent: false,\n    });\n    this.map.addOverlay(overlay);\n  }\n /**\n   * 地图添加线段feature\n   * @param {Array} data eg: [{longitude: 120, latitude: 30}]\n   */\n  addPolyline(data) {\n    this.addOverlay(data[0], StartImg);\n    this.addOverlay(data[data.length - 1], EndImg);\n    this.view.setZoom(15);\n    this.view.setCenter([120, 30]);\n    const coord = data.map((item) => [item.longitude, item.latitude]);\n    const feature = new Feature({\n      geometry: new LineString(coord),\n      type: 'patrol',\n      style: new Style({\n        stroke: new Stroke({\n          color: 'blue',\n          width: 1,\n          lineDash: [5],\n        }),\n      }),\n    });\n    this.source.addFeature(feature);\n  }\n}\n")])])]),t("p",[n._v("Point.vue")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<template>\n  <div :class="$style[\'container\']">\n    <img :class="$style[\'img\']" :src="icon" alt="">\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'Point\',\n  props: {\n    icon: {\n      type: [String, Object],\n      required: true,\n    },\n  },\n  data() {\n    return {\n    };\n  },\n  methods: {\n  },\n};\n<\/script>\n\n<style lang="less" module>\n .container {\n     .img {\n         width: 20px;\n         height: 30px;\n     }\n }\n</style>\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);