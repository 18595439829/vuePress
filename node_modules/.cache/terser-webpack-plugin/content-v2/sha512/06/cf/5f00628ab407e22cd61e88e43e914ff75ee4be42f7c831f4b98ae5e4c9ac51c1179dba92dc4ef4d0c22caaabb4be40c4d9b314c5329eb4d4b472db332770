{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{414:function(n,t,e){\"use strict\";e.r(t);var i=e(44),r=Object(i.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"vue图片瀑布流组件\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue图片瀑布流组件\"}},[n._v(\"#\")]),n._v(\" vue图片瀑布流组件\")]),n._v(\" \"),e(\"h3\",{attrs:{id:\"使用\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用\"}},[n._v(\"#\")]),n._v(\" 使用\")]),n._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[n._v(\"<template>\\n  <TheWaterfall :list=\\\"list\\\"/>\\n</template>\\n<script>\\n  import TheWaterfall from './TheWaterfall.vue'\\n  export default {\\n    components: {\\n      TheWaterfall\\n    },\\n    data() {\\n      return {\\n        list: [\\n          {\\n              id: 1,\\n              url: require('@/tests/images/Rectangle 2031.png'),\\n              width: 142,\\n              height: 80\\n          }\\n        ]\\n      }\\n    }\\n  }\\n<\\/script>\\n\")])])]),e(\"p\",[n._v(\"TheWaterfall.vue\")]),n._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[n._v('<template>\\n  <div :class=\"$style[\\'container\\']\" @click=\"click\">\\n    <div\\n      :class=\"$style[\\'item\\']\"\\n      :style=\"{ width: `${width}px` }\"\\n      ref=\"item\"\\n      v-for=\"item in list\"\\n      :current=\"current == item.id\"\\n      :id=\"item.id\"\\n      :key=\"item.id\"\\n    >\\n      <img :src=\"item.url\" :id=\"item.id\" alt=\"\" />\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  name: \\'TheWaterfall\\',\\n  props: {\\n    /**\\n       * img数组\\n       * {\\n       *    id: string,\\n       *    url: string,\\n       *    width: number,\\n       *    height: number\\n       * }[]\\n       */\\n    list: {\\n      type: Array,\\n      required: true\\n    },\\n    /**\\n     * 图片的宽度\\n     */\\n    width: {\\n      type: Number,\\n      required: false,\\n      default: 142\\n    },\\n    /**\\n     * 瀑布流有多少列\\n     */\\n    columns: {\\n      type: Number,\\n      required: false,\\n      default: 2\\n    },\\n    /**\\n     * 图片的右边距\\n     */\\n    right: {\\n      type: Number,\\n      required: false,\\n      default: 10\\n    },\\n    /**\\n     * 图片的下边距\\n     */\\n    bottom: {\\n      type: Number,\\n      required: false,\\n      default: 10\\n    }\\n  },\\n  data () {\\n    return {\\n      current: null\\n    }\\n  },\\n  methods: {\\n    click (e) {\\n      this.current = e.target.id\\n    },\\n    waterFall () {\\n      // 1- 确定图片的宽度 - 滚动条宽度\\n      const columns = this.columns // 默认2 列\\n      const itemWidth = this.width // 得到item的宽度\\n      // 设置到item的宽度\\n\\n      const arr = []\\n\\n      this.list.forEach((item, index) => {\\n        const height = item.height + this.bottom\\n        const width = item.width\\n        const bi = itemWidth / width // 获取缩小的比值\\n        const boxheight = height * bi // 图片的高度*比值 = item的高度\\n        if (index < columns) {\\n          // 2- 确定第一行\\n          this.$refs.item[index].style.top = \\'0px\\'\\n          this.$refs.item[index].style.left = `${\\n            itemWidth * index\\n              ? itemWidth * index + this.right\\n              : itemWidth * index\\n          }px`\\n          arr.push(boxheight)\\n        } else {\\n          // 其他行\\n          // 3- 找到数组中最小高度  和 它的索引\\n          let minHeight = arr[0]\\n          let min = 0\\n          for (let j = 0; j < arr.length; j++) {\\n            if (minHeight > arr[j]) {\\n              minHeight = arr[j]\\n              min = j\\n            }\\n          }\\n          // 4- 设置下一行的第一个盒子位置\\n          // top值就是最小列的高度\\n          this.$refs.item[index].style.top = `${arr[min]}px`\\n          this.$refs.item[index].style.left = this.$refs.item[min].style.left\\n\\n          // 5- 修改最小列的高度\\n          // 最小列的高度 = 当前自己的高度 + 拼接过来的高度\\n          arr[min] = arr[min] + boxheight\\n        }\\n      })\\n    }\\n  },\\n  mounted () {\\n    this.waterFall()\\n  }\\n}\\n<\\/script>\\n\\n<style lang=\"less\" module>\\n.container {\\n  width: 100%;\\n  position: relative;\\n  height: 100vh;\\n  background: #fff;\\n  .item {\\n    z-index: 10;\\n    transition: 0.25s;\\n    overflow: hidden;\\n    position: absolute;\\n    &[current=\"true\"] {\\n      outline: 1px solid #3307fe;\\n      box-sizing: border-box;\\n    }\\n    img {\\n      width: 100%;\\n      height: 100%;\\n    }\\n  }\\n}\\n</style>\\n\\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}