{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{386:function(e,t,a){\"use strict\";a.r(t);var n=a(44),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"moveable组件学习笔记二-resize更改大小\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#moveable组件学习笔记二-resize更改大小\"}},[e._v(\"#\")]),e._v(\" moveable组件学习笔记二: resize更改大小\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"_1-resize-更改元素大小\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-resize-更改元素大小\"}},[e._v(\"#\")]),e._v(\" 1.resize 更改元素大小\")]),e._v(\" \"),a(\"p\",[e._v(\"https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"_1-1-属性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-属性\"}},[e._v(\"#\")]),e._v(\" 1.1 属性\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('this.moveable = new Moveable(\\n  this.$refs.container, // moveable元素的父元素\\n  {\\n      className: \\'draggable\\', // 可交互组件的class名称\\n      target: this.$refs.example, // moveable元素\\n      origin: false, // moveable元素的中心点是否可见,default: true\\n      /**更改大小属性 */\\n      resizable: true, // 是否支持更改大小\\n      keepRatio: false, // 是否等比例更改大小, default: false\\n      renderDirections:  [\"nw\", \"ne\", \"sw\", \"se\"], // resize的句柄显示, default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\\n      throttleResize: 100, // resize时节流的单位(px),即每次resize的最小变动为100px, 默认不节流\\n  }\\n);\\n')])])]),a(\"h3\",{attrs:{id:\"_1-2-事件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-事件\"}},[e._v(\"#\")]),e._v(\" 1.2 事件\")]),e._v(\" \"),a(\"p\",[e._v(\"resize事件有\"),a(\"strong\",[e._v(\"resizeStart\")]),e._v(\",\"),a(\"strong\",[e._v(\"resize\")]),e._v(\",\"),a(\"strong\",[e._v(\"resizeEnd\")]),e._v(\"三种,通过moveable实例的on方法添加监听事件,返回值event\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"resize\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('this.moveable\\n  .on(\\n    \"resize\",\\n    ({\\n      currentTarget, // moveable实例,即this.moveable\\n      moveable, // moveable的manager对象, const manager = this.moveable.getManager();\\n      target, // DOM 初始化moveable的target元素\\n      clientX, // number 鼠标所在屏幕的横坐标\\n      clientY, // number 鼠标实例所在屏幕的纵坐标\\n      datas,\\n      inputEvent, // Event 鼠标事件mousemove\\n      direction, // // [numberX, numberY] 用来判断所操作的句柄: [1,1]表示操作的句柄为右下,[-1,-1]表示操作的句柄是左上, [1,0]表示操作的句柄为右侧边的中点\\n      width, // number 元素(target)的css宽度\\n      height, // number 元素(target)的css高度\\n      offsetWidth, // number 元素(target)的offsetWidth(padding + width + border)\\n      offsetHeight, // number 元素(target)的offsetHeight(padding + height + border)\\n      dist, // number[] 元素的[width,height]相对于原始数据的变化数据[x,y]\\n      delta, // number[] 元素的[width,height]的相对上一次数据的数据[deltaX,deltaY]\\n      isPinch, // 元素是否被压缩,不包括resize,scale所引起的形变[**暂未证实具体作用**]\\n      drag, // 元素的拖拽事件,同onDrag的参数\\n    }) => {\\n      target.style.width = `${width}px`;\\n      target.style.height = `${height}px`;\\n      target.style.transform = `translate(${drag.beforeTranslate[0]}px, ${drag.beforeTranslate[1]}px)`;\\n    }\\n  )\\n')])])]),a(\"ul\",[a(\"li\",[e._v(\"resizeStart\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"this.moveable\\n  .on(\\n    \\\"resizeStart\\\",\\n    ({\\n      dragStart, // 同dragStart事件\\n      set, // (size: number[width, height]) => any, 设置元素的style宽高\\n      setMin, // (minSize: number[minWidth, minHeight]) => any, 设置元素的style最小宽高\\n      setMax, // (minSize: number[maxWidth, maxHeight]) => any, 设置元素的style最大宽高\\n      setOrigin, // (origin: Array<string | number>) => any, 设置css起点, (default: % %)[**暂未发现实际作用**]\\n      setFixedDirection, // (startDirecition: number[]) => any, 设置resize的固定方向; 默认为反方向:即往左或往上修改元素大小为负值,预期结果为往左或往上更改元素宽高;如果设置为正值,则元素宽高只能往右或往下延展,即使操作是往左或往上修改元素大小\\n      setRatio, // (ratio: number) => any, 设置resize的比例,仅在keepRatio属性为true时生效, 默认为offsetWidth / offsetHeight\\n      currentTarget, \\n      moveable, \\n      target, \\n      clientX, \\n      clientY, \\n      datas,\\n      inputEvent, \\n      direction, \\n    }) => {\\n      console.log('resizeStart')\\n    }\\n  )\\n\")])])]),a(\"ul\",[a(\"li\",[e._v(\"resizeEnd\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('this.moveable\\n    .on(\\n          \"resizeEnd\",\\n          ({\\n            lastEvent, // 最后一个拖动的事件,如果moveable实例未被执行resize操作,则为undefined\\n            isDrag,  // boolean moveable实例是否被拖动了\\n            isDouble,  // boolean moveable实例是否被双击\\n            currentTarget, \\n            moveable, \\n            target, \\n            clientX, \\n            clientY, \\n            datas,\\n            inputEvent,\\n          }) => {\\n            \\n          }\\n        )\\n')])])]),a(\"h3\",{attrs:{id:\"_1-3-方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-3-方法\"}},[e._v(\"#\")]),e._v(\" 1.3 方法\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"request({direction, deltaWidth, deltaHeight, offsetWidth, offsetHeight, isInstant})\\ndirection // number[],  default:[1, 1]  resize的方向[\"),a(\"em\",[e._v(\"暂时未发现实际作用\")]),e._v(\"]\\ndeltaWidth,deltaHeight // number, resize后的元素相对于resize前的元素的宽高变化的数据(单位:px)\\noffsetWidth, offsetHeight// number, 元素resize后的绝对(实际)宽高(单位:px)\\nisInstant, // boolean, 是否立即执行request和requestEnd\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('dragRequest() {\\n      const requester = this.moveable.request(\"draggable\");\\n      requester.request({ deltaX: 10, deltaY: 10 });\\n      requester.requestEnd();\\n    },\\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}